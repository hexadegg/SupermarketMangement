//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolManagement
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SupermarketInfoEntities9 : DbContext
    {
        public SupermarketInfoEntities9()
            : base("name=SupermarketInfoEntities9")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Indent> Indent { get; set; }
        public virtual DbSet<Inventory> Inventory { get; set; }
        public virtual DbSet<OrderDetail> OrderDetail { get; set; }
        public virtual DbSet<Payment> Payment { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrder { get; set; }
        public virtual DbSet<Purchasing> Purchasing { get; set; }
        public virtual DbSet<Supplier> Supplier { get; set; }
    
        public virtual int prcProductCategory(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcProductCategory", categoryIDParameter);
        }
    
        public virtual int prcQuantity(string produtcID, string productCount)
        {
            var produtcIDParameter = produtcID != null ?
                new ObjectParameter("produtcID", produtcID) :
                new ObjectParameter("produtcID", typeof(string));
    
            var productCountParameter = productCount != null ?
                new ObjectParameter("productCount", productCount) :
                new ObjectParameter("productCount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcQuantity", produtcIDParameter, productCountParameter);
        }
    
        public virtual int prcValidateUser(string userEmail, string password)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcValidateUser", userEmailParameter, passwordParameter);
        }
    }
}
